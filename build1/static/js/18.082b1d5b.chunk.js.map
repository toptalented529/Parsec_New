{"version":3,"sources":["views/NFTManage/components/NFTCard/StyledCard.tsx","views/NFTManage/components/NFTCard/StyledCardHeader.tsx","views/NFTManage/components/NFTCard/index.tsx","views/NFTManage/components/NftList.tsx","views/NFTManage/apis/getAllArtworks.ts","views/NFTManage/index.tsx","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","components/Layout/Flex.tsx"],"names":["PromotedGradient","keyframes","StyledCard","styled","Card","isChecked","theme","colors","isPromoted","css","primaryBright","secondary","props","card","background","isDesktop","mediaQueries","sm","StyledCardInner","Box","radii","Wrapper","CardHeader","StyledCardHeader","cardTitle","description","alignItems","justifyContent","flexDirection","color","scale","StyledButton","Button","NFTCard","hash","t","useTranslation","useToast","toastSuccess","toastError","ribbon","variantColor","text","style","padding","mt","src","alt","borderRadius","marginBottom","onClick","formData","FormData","append","requestUrl","msg","axios","post","then","res","status","catch","err","name","message","CardLayout","FlexLayout","NftList","useState","requestedApproval","setRequestedApproval","artworks","setArtworks","useEffect","get","data","GetAllArtworks","map","art","artworkName","StyledHero","div","textSubtle","NFTManage","Page","as","Container","children","px","mx","maxWidth","DEFAULT_META","title","image","StyledPage","lg","PageMeta","pathname","useLocation","cakePriceUsd","usePriceColaBusd","cakePriceUsdDisplay","gt","toNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content"],"mappings":"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","file":"static/js/18.082b1d5b.chunk.js","sourcesContent":["import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from 'parsec-swap-uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isChecked?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isChecked, theme }) => theme.colors[isChecked ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\n\nconst Wrapper = styled(CardHeader)<{ isChecked?: boolean }>`\n  background: ${({ isChecked }) => (isChecked ? '#56195a' : '#70dce4')};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{ cardTitle: string; description: string; isChecked?: boolean }> = ({\n  cardTitle,\n  description,\n  isChecked = false,\n}) => {\n  return (\n    <Wrapper isChecked={isChecked}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isChecked ? 'textDisabled' : 'body'} scale=\"lg\">\n            {cardTitle}\n          </Heading>\n          <Text color={isChecked ? 'textDisabled' : 'textSubtle'}>{description}</Text>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport useToast from 'hooks/useToast'\n\nimport { CardBody, Flex, CardRibbon, Button } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport StyledCardHeader from './StyledCardHeader'\n\nconst StyledButton = styled(Button)<{ isChecked: boolean }>`\n  background-image: linear-gradient(to left, #991cd1,#d4307a);\n  border-radius:32px;\n  padding: 10px 35px;\n  border-radius: 30px;\n  font-family: Roboto;\n  text-align: center;\n  font-weight: 100;\n  text-shadow: 0 0 10px, 0 0 10px;\n`\n\nexport interface NFTArt {\n  artworkType: string\n  artworkName: string\n  artistName: string\n  portfolioURL: string\n  description: string\n  royalties: number\n  filePath: string\n  hash: string\n  isChecked: boolean\n}\n\nconst NFTCard: React.FC<{ cardTitle: string; description: string; isChecked: boolean; hash: string }> = ({\n  cardTitle,\n  description,\n  isChecked,\n  hash,\n}) => {\n  const { t } = useTranslation()\n  // const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n\n  const handleButton = () => {\n    const formData = new FormData()\n    formData.append('hash', hash)\n\n    const requestUrl = isChecked\n      ? 'http://localhost:5000/api/v0/nft/uncheckArtwork'\n      : 'http://localhost:5000/api/v0/nft/checkArtwork'\n\n    const msg = isChecked ? 'Uncheck Success' : 'Check Success'\n\n    // setRequestedApproval(true)\n    axios\n      .post(requestUrl, formData)\n      .then((res) => {\n        if (res.status) toastSuccess(msg)\n        // setRequestedApproval(false)\n      })\n      .catch((err) => {\n        toastError(err.name, err.message)\n        // setRequestedApproval(false)\n      })\n  }\n\n  return (\n    <StyledCard isChecked={isChecked} ribbon={isChecked && <CardRibbon variantColor=\"primary\" text={t('Checked')} />}>\n      <StyledCardInner>\n        <StyledCardHeader isChecked={isChecked} cardTitle={cardTitle} description={description} />\n        <CardBody style={{ padding: '0px' }}>\n          <Flex mt=\"6px\" flexDirection=\"column\">\n            {/* <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n              {t('NFT Artwork Image')}\n            </Text> */}\n            <img\n              src={`https://gateway.pinata.cloud/ipfs/${hash}`}\n              alt=\"Artwork Img\"\n              style={{ borderRadius: '25px', marginBottom: '10px' }}\n            />\n            <StyledButton onClick={handleButton} isChecked={isChecked}>\n              {isChecked ? 'Uncheck Artwork' : 'Check Artwork'}\n            </StyledButton>\n          </Flex>\n        </CardBody>\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default NFTCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\n\nimport { GetAllArtworks } from '../apis/getAllArtworks'\nimport NFTCard from './NFTCard'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst NftList = () => {\n  const { artworks } = GetAllArtworks()\n\n  return (\n    <CardLayout>\n      {artworks.map((art) => (\n        <NFTCard\n          key={art.hash}\n          cardTitle={art.artworkName}\n          description={art.description}\n          isChecked={art.isChecked}\n          hash={art.hash}\n        />\n      ))}\n    </CardLayout>\n  )\n}\n\nexport default NftList\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport useToast from 'hooks/useToast'\n\n// Approve CAKE auto pool\nexport const GetAllArtworks = () => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [artworks, setArtworks] = useState([])\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    setRequestedApproval(true)\n    axios\n      .get('http://localhost:5000/api/v0/nft/getAllArtworks')\n      .then((res) => {\n        setRequestedApproval(false)\n        if (res.status) setArtworks(res.data.data)\n      })\n      .catch((err) => {\n        setRequestedApproval(false)\n        toastError(err.name, err.message)\n      })\n  }, [toastError])\n\n  return { artworks, requestedApproval }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/Layout/Page'\nimport NftList from './components/NftList'\n\nconst StyledHero = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 32px;\n`\n\nconst NFTManage = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Page>\n      <StyledHero>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('NFT Artworks Management')}\n        </Heading>\n      </StyledHero>\n      <NftList />\n    </Page>\n  )\n}\n\nexport default NFTManage\n","import React from 'react'\nimport { Box, BoxProps } from 'parsec-swap-uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'InveSwap',\n  description:\n    'The most popular AMM on BSC by user count! Earn CAKE through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by InveSwap), NFTs, and more, on a platform you can trust.',\n  image: 'https://matchaswap.zilionixx.com/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('InveSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('InveSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('InveSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('InveSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('InveSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('InveSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('InveSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('InveSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('InveSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('InveSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('InveSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceColaBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  text-align: center;\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceColaBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n"],"sourceRoot":""}