{"version":3,"sources":["../node_modules/lodash/isEmpty.js","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx","views/Voting/components/BreadcrumbLink.tsx"],"names":["baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","value","splice","length","tag","size","key","call","BaseLabel","styled","label","theme","colors","text","Label","SecondaryLabel","FormError","children","color","mb","FormErrors","errors","mt","map","error","Choice","onRemove","onTextInput","props","useState","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","currentTarget","right","top","zIndex","variant","onClick","makeChoice","id","uniqueId","Choices","choices","t","useTranslation","hasMinimumChoices","filter","choice","as","scale","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","block","onDismiss","modalIsOpen","setModalIsOpen","useGetVotingPower","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","useTheme","title","headerBackground","gradients","cardHeader","width","height","alignItems","justifyContent","DetailsView","EasyMde","lazy","CreateProposal","name","body","times","startDate","startTime","endDate","endTime","snapshot","state","setState","setIsLoading","fieldsState","setFieldsState","account","useWeb3React","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","startDateTimestamp","getFormErrors","handleSubmit","preventDefault","proposal","JSON","stringify","generatePayloadData","SnapshotCommand","PROPOSAL","payload","start","end","metadata","generateMetaData","signMessage","sig","msg","address","sendSnaphotData","data","ipfsHash","console","updateValue","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMIN_ADDRESS","useEffect","Container","py","BreadcrumbLink","to","onSubmit","Layout","htmlFor","inputName","required","onTextChange","p","px","ReactMarkdown","DatePicker","selected","placeholderText","mr","href","getZnxScanLink","truncateWalletAddress","endIcon","spin","isEmpty","count","VOTE_THRESHOLD","ConnectWalletButton","Link","primaryBright"],"mappings":"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","file":"static/js/21.7aa95a05.chunk.js","sourcesContent":["var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import React from 'react'\nimport { Box, Text } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\n\nconst BaseLabel = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-weight: 600;\n  margin-bottom: 8px;\n`\n\nexport const Label = styled(BaseLabel)`\n  font-size: 20px;\n`\n\nexport const SecondaryLabel = styled(BaseLabel)`\n  font-size: 12px;\n  text-transform: uppercase;\n`\n\nexport const FormError: React.FC = ({ children }) => (\n  <Text color=\"failure\" mb=\"4px\">\n    {children}\n  </Text>\n)\n\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\n  return (\n    <Box mt=\"8px\">\n      {errors.map((error) => {\n        return <FormError key={error}>{error}</FormError>\n      })}\n    </Box>\n  )\n}\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\nimport { Box, CloseIcon, IconButton, Input, InputProps } from 'parsec-swap-uikit'\n\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\n  onTextInput: (value: string) => void\n  onRemove?: () => void\n}\n\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\n  const [isWarning, setIsWarning] = useState(false)\n  const [isDirty, setIsDirty] = useState(false)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget\n\n    setIsWarning(isDirty && value.length === 0)\n    setIsDirty(true)\n    onTextInput(value)\n  }\n\n  return (\n    <Box position=\"relative\" mb=\"16px\">\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\n      {onRemove && (\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\n          <IconButton variant=\"text\" onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Choice\n","import React from 'react'\nimport { Button, Card, CardBody, CardHeader, Heading } from 'parsec-swap-uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n","import { ContextApi } from 'contexts/Localization/types'\nimport { format, parseISO, isValid } from 'date-fns'\nimport { MINIMUM_CHOICES } from './Choices'\nimport { FormState } from './types'\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  if (!isValid(date) || !isValid(time)) {\n    return null\n  }\n\n  const dateStr = format(date, 'yyyy-MM-dd')\n  const timeStr = format(time, 'HH:mm:ss')\n\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\n}\n\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\n  const errors: { [key: string]: string[] } = {}\n\n  if (!name) {\n    errors.name = [t('%field% is required', { field: 'Title' })]\n  }\n\n  if (!body) {\n    errors.body = [t('%field% is required', { field: 'Body' })]\n  }\n\n  if (choices.length < MINIMUM_CHOICES) {\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\n  }\n\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\n    errors.choices = Array.isArray(errors.choices)\n      ? [...errors.choices, t('Choices must not be empty')]\n      : (errors.choices = [t('Choices must not be empty')])\n  }\n\n  if (!isValid(startDate)) {\n    errors.startDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(startTime)) {\n    errors.startTime = [t('Please select a valid time')]\n  }\n\n  if (!isValid(endDate)) {\n    errors.endDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(endTime)) {\n    errors.endTime = [t('Please select a valid time')]\n  }\n\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\n\n  if (endDateTimestamp < startDateTimestamp) {\n    errors.endDate = Array.isArray(errors.endDate)\n      ? [...errors.endDate, t('End date must be after the start date')]\n      : (errors.endDate = [t('End date must be after the start date')])\n  }\n\n  if (snapshot === 0) {\n    errors.snapshot = [t('Invalid snapshot')]\n  }\n\n  return errors\n}\n","import React, { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\n    useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              cakeVaultBalance={cakeVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\nimport {\n  AutoRenewIcon,\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Input,\n  LinkExternal,\n  Text,\n  useModal,\n} from 'parsec-swap-uikit'\nimport { useHistory } from 'react-router'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport isEmpty from 'lodash/isEmpty'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { SnapshotCommand } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getZnxScanLink } from 'utils'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport { signMessage } from 'utils/web3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { DatePicker, TimePicker } from 'components/DatePicker'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport BreadcrumbLink from '../components/BreadcrumbLink'\nimport { sendSnaphotData, Message, generateMetaData, generatePayloadData } from '../helpers'\nimport Layout from '../components/Layout'\nimport { FormErrors, Label, SecondaryLabel } from './styles'\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\nimport { combineDateAndTime, getFormErrors } from './helpers'\nimport { FormState } from './types'\nimport { ADMIN_ADDRESS, VOTE_THRESHOLD } from '../config'\nimport VoteDetailsModal from '../components/VoteDetailsModal'\n\nconst EasyMde = lazy(() => import('components/EasyMde'))\n\nconst CreateProposal = () => {\n  const [state, setState] = useState<FormState>({\n    name: '',\n    body: '',\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n    snapshot: 0,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const initialBlock = useInitialBlock()\n  const { push } = useHistory()\n  const { library } = useWeb3Provider()\n  const { toastSuccess, toastError } = useToast()\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\n  const formErrors = getFormErrors(state, t)\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n\n    try {\n      setIsLoading(true)\n      const proposal = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.PROPOSAL,\n        payload: {\n          name,\n          body,\n          snapshot,\n          start: combineDateAndTime(startDate, startTime),\n          end: combineDateAndTime(endDate, endTime),\n          choices: choices\n            .filter((choice) => choice.value)\n            .map((choice) => {\n              return choice.value\n            }),\n          metadata: generateMetaData(),\n          type: 'single-choice',\n        },\n      })\n\n      const sig = await signMessage(library, account, proposal)\n\n      if (sig) {\n        const msg: Message = { address: account, msg: proposal, sig }\n\n        // Save proposal to snapshot\n        const data = await sendSnaphotData(msg)\n\n        // Redirect user to newly created proposal page\n        push(`/voting/proposal/${data.ipfsHash}`)\n\n        toastSuccess(t('Proposal created!'))\n      } else {\n        toastError(t('Error'), t('Unable to sign payload'))\n      }\n    } catch (error) {\n      // toastError(t('Error'), error?.message || error?.error)\n      console.error(error)\n      setIsLoading(false)\n    }\n  }\n\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }))\n\n    // Keep track of what fields the user has attempted to edit\n    setFieldsState((prevFieldsState) => ({\n      ...prevFieldsState,\n      [key]: true,\n    }))\n  }\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name: inputName, value } = evt.currentTarget\n    updateValue(inputName, value)\n  }\n\n  const handleEasyMdeChange = (value: string) => {\n    updateValue('body', value)\n  }\n\n  const handleChoiceChange = (newChoices: Choice[]) => {\n    updateValue('choices', newChoices)\n  }\n\n  const handleDateChange = (key: string) => (value: Date) => {\n    updateValue(key, value)\n  }\n\n  const options = useMemo(\n    () => ({\n      hideIcons: account === ADMIN_ADDRESS ? [] : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\n    }),\n    [account],\n  )\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      setState((prevState) => ({\n        ...prevState,\n        snapshot: initialBlock,\n      }))\n    }\n  }, [initialBlock, setState])\n\n  return (\n    <Container py=\"40px\">\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <BreadcrumbLink to=\"/\">{t('Home')}</BreadcrumbLink>\n          <BreadcrumbLink to=\"/voting\">{t('Voting')}</BreadcrumbLink>\n          <Text>{t('Make a Proposal')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <Layout>\n          <Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"name\">{t('Title')}</Label>\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\n            </Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"body\">{t('Content')}</Label>\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t('Tip: write in Markdown!')}\n              </Text>\n              <EasyMde\n                id=\"body\"\n                name=\"body\"\n                onTextChange={handleEasyMdeChange}\n                value={body}\n                options={options}\n                required\n              />\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\n            </Box>\n            {body && (\n              <Box mb=\"24px\">\n                <Card>\n                  <CardHeader>\n                    <Heading as=\"h3\" scale=\"md\">\n                      {t('Preview')}\n                    </Heading>\n                  </CardHeader>\n                  <CardBody p=\"0\" px=\"24px\">\n                    <ReactMarkdown>{body}</ReactMarkdown>\n                  </CardBody>\n                </Card>\n              </Box>\n            )}\n            <Choices choices={choices} onChange={handleChoiceChange} />\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\n          </Box>\n          <Box>\n            <Card>\n              <CardHeader>\n                <Heading as=\"h3\" scale=\"md\">\n                  {t('Actions')}\n                </Heading>\n              </CardHeader>\n              <CardBody>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"startDate\"\n                    onChange={handleDateChange('startDate')}\n                    selected={startDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"startTime\"\n                    onChange={handleDateChange('startTime')}\n                    selected={startTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"endDate\"\n                    onChange={handleDateChange('endDate')}\n                    selected={endDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"endTime\"\n                    onChange={handleDateChange('endTime')}\n                    selected={endTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\n                </Box>\n                {account && (\n                  <Flex alignItems=\"center\" mb=\"8px\">\n                    <Text color=\"textSubtle\" mr=\"16px\">\n                      {t('Creator')}\n                    </Text>\n                    <LinkExternal href={getZnxScanLink(account, 'address')}>\n                      {truncateWalletAddress(account)}\n                    </LinkExternal>\n                  </Flex>\n                )}\n                <Flex alignItems=\"center\" mb=\"16px\">\n                  <Text color=\"textSubtle\" mr=\"16px\">\n                    {t('Snapshot')}\n                  </Text>\n                  <LinkExternal href={getZnxScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\n                </Flex>\n                {account ? (\n                  <>\n                    <Button\n                      type=\"submit\"\n                      width=\"100%\"\n                      isLoading={isLoading}\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                      disabled={!isEmpty(formErrors)}\n                      mb=\"16px\"\n                    >\n                      {t('Publish')}\n                    </Button>\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\n                    </Text>\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\n                      {t('Check voting power')}\n                    </Button>\n                  </>\n                ) : (\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\n                )}\n              </CardBody>\n            </Card>\n          </Box>\n        </Layout>\n      </form>\n    </Container>\n  )\n}\n\nexport default CreateProposal\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst BreadcrumbLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.primaryBright};\n`\n\nexport default BreadcrumbLink\n"],"sourceRoot":""}