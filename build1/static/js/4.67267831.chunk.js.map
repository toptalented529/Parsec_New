{"version":3,"sources":["utils/calls/farms.ts","utils/calls/pools.ts","utils/calls/nfts.ts","components/Layout/Container.tsx","views/Voting/helpers.ts","views/Voting/config.ts","utils/truncateWalletAddress.ts","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx"],"names":["options","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pair","amount","value","BigNumber","times","DEFAULT_TOKEN_DECIMAL","toString","deposit","tx","wait","receipt","status","unstakeFarm","withdraw","harvestFarm","getActivePools","block","eligiblePools","pools","filter","pool","sousId","isFinished","undefined","simpleRpcProvider","getBlockNumber","blockNumber","startBlockCalls","map","contractAddress","address","getAddress","name","endBlockCalls","multicall","sousChefV2","startBlocks","endBlocks","reduce","accum","poolCheck","index","startBlock","endBlock","gte","lte","ethers","utils","parseEther","overrides","mintNFT","nftContract","tokenID","mint","burnNFT","burn","getTokenURI","tokenURI","uri","approveMatchaToken","matchaTokenContract","nftExchangeAddr","approve","getApproveMatchaToken","owner","spender","allowance","approveNFT","originalNftContract","getApproveNFT","getApproved","buyToken","nftExchangeContract","readyToSellToken","price","cancelSellToken","setCurrentPrice","getAskLength","askLen","getAsks","getAsksDesc","getAsksByPage","page","size","getAsksByPageDesc","getAsksByUser","user","getAsksByUserDesc","Container","children","props","px","mx","maxWidth","isCoreProposal","proposal","author","toLowerCase","ADMIN_ADDRESS","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","params","symbol","getColaAddress","decimals","generatePayloadData","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","sendSnaphotData","message","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","SNAPSHOT_VOTING_API","calculateVoteResults","votes","vote","choiceText","choices","choice","getTotalFromVotes","power","metadata","votingPower","plus","BIG_ZERO","PROPOSALS_TO_SHOW","IPFS_GATEWAY","VOTE_THRESHOLD","truncateWalletAddress","startLength","endLength","substring","length","Layout","styled","div","theme","mediaQueries","lg","VotingBox","colors","cardBorder","ModalInner","mb","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","t","useTranslation","as","fontSize","color","textTransform","bold","toFormat","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","isActive","useWeb3React","useState","setVotingPower","isLoading","setIsLoading","useEffect","fetchVotingPower","prevVotingPower","Table","table","text","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components"],"mappings":"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","file":"static/js/4.67267831.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pair, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const tx = await masterChefContract.deposit(pair, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pair, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const tx = await masterChefContract.withdraw(pair, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pair) => {\n  const tx = await masterChefContract.deposit(pair, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import { DEFAULT_GAS_LIMIT } from 'config'\nimport { ethers } from 'ethers'\n\nconst options = {\n  gasLimit: ethers.utils.parseEther('0.0000000000003'),\n}\n\nconst overrides = {\n  value: ethers.utils.parseEther('0.1'),\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const mintNFT = async (nftContract, tokenID) => {\n  const tx = await nftContract.mint(tokenID, overrides)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const burnNFT = async (nftContract, address, tokenID) => {\n  const tx = await nftContract.burn(address, tokenID, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const getTokenURI = async (nftContract, address, tokenID) => {\n  const uri = await nftContract.tokenURI(tokenID)\n  return uri\n}\n\n// Exchange\nexport const approveMatchaToken = async (matchaTokenContract, nftExchangeAddr, amount) => {\n  const tx = await matchaTokenContract.approve(nftExchangeAddr, amount, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const getApproveMatchaToken = async (matchaTokenContract, owner, spender) => {\n  const value = await matchaTokenContract.allowance(owner, spender)\n  return value\n}\n\nexport const approveNFT = async (originalNftContract, nftExchangeAddr, tokenID) => {\n  const tx = await originalNftContract.approve(nftExchangeAddr, tokenID, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const getApproveNFT = async (originalNftContract, tokenID) => {\n  const address = await originalNftContract.getApproved(tokenID)\n  return address\n}\n\nexport const buyToken = async (nftExchangeContract, tokenID) => {\n  const tx = await nftExchangeContract.buyToken(tokenID, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const readyToSellToken = async (nftExchangeContract, tokenID, price) => {\n  const tx = await nftExchangeContract.readyToSellToken(tokenID, price, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const cancelSellToken = async (nftExchangeContract, tokenID) => {\n  const tx = await nftExchangeContract.cancelSellToken(tokenID, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const setCurrentPrice = async (nftExchangeContract, tokenID, price) => {\n  const tx = await nftExchangeContract.setCurrentPrice(tokenID, price, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const getAskLength = async (nftExchangeContract) => {\n  const askLen = await nftExchangeContract.getAskLength()\n  return askLen\n}\n\nexport const getAsks = async (nftExchangeContract) => {\n  const askLen = await nftExchangeContract.getAsks()\n  return askLen\n}\n\nexport const getAsksDesc = async (nftExchangeContract) => {\n  const askLen = await nftExchangeContract.getAsksDesc()\n  return askLen\n}\n\nexport const getAsksByPage = async (nftExchangeContract, page, size) => {\n  const askLen = await nftExchangeContract.getAsksByPage(page, size)\n  return askLen\n}\n\nexport const getAsksByPageDesc = async (nftExchangeContract, page, size) => {\n  const askLen = await nftExchangeContract.getAsksByPageDesc(page, size)\n  return askLen\n}\n\nexport const getAsksByUser = async (nftExchangeContract, user) => {\n  const askLen = await nftExchangeContract.getAsksByUser(user)\n  return askLen\n}\n\nexport const getAsksByUserDesc = async (nftExchangeContract, user) => {\n  const askLen = await nftExchangeContract.getAsksByUserDesc(user)\n  return askLen\n}\n","import React from 'react'\nimport { Box, BoxProps } from 'parsec-swap-uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import BigNumber from 'bignumber.js'\nimport { getColaAddress } from 'utils/addressHelpers'\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'mos', params: { symbol: 'MOS', address: getColaAddress(), decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnaphotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    const power = new BigNumber(vote.metadata?.votingPower)\n    return accum.plus(power)\n  }, BIG_ZERO)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMIN_ADDRESS = '0x6eaf1b33b8672c5dc40aB8f4bA3A0111723126c7'\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANCAKE_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Box, BoxProps } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import React from 'react'\nimport { Text, Flex } from 'parsec-swap-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: BigNumber\n  cakeBalance: BigNumber\n  cakeVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {total.toFormat(3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakeVaultBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other Syrup Pools')}\n        </Text>\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('CAKE PSC LP')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: BigNumber\n  cakeVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n  total: BigNumber\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: BIG_ZERO,\n  cakeVaultBalance: BIG_ZERO,\n  cakePoolBalance: BIG_ZERO,\n  poolsBalance: BIG_ZERO,\n  cakeBnbLpBalance: BIG_ZERO,\n  total: BIG_ZERO,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          cakeVaultBalance,\n          verificationHash,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: new BigNumber(cakeBalance),\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\n            cakePoolBalance: new BigNumber(cakePoolBalance),\n            poolsBalance: new BigNumber(poolsBalance),\n            cakeVaultBalance: new BigNumber(cakeVaultBalance),\n            total: new BigNumber(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n","import React from 'react'\nimport { Heading } from 'parsec-swap-uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  // p: (props) => {\n  //   return <Text as=\"p\" my=\"16px\" {...props} />\n  // },\n  table: Table,\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n"],"sourceRoot":""}