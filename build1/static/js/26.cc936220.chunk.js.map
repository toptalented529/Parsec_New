{"version":3,"sources":["views/MarketPlace/hooks/useMintArt.ts","views/MarketPlace/MintArtworks.tsx","utils/calls/farms.ts","utils/calls/pools.ts","utils/calls/nfts.ts"],"names":["useMintArt","address","nftMintContract","useNftContract","handleMintArt","useCallback","tokenID","mintNFT","txHash","console","info","handleBurnArt","burnNFT","handleGetTokenURI","getTokenURI","tokenURI","onMintArt","onBurnArt","onGetTokenURI","StyledPage","styled","div","theme","isDark","StyledCheckBox","Checkbox","StyledModal","CustomModalTitle","CheckBoxTitle","span","RightTitle","SpanCenterBox","FormPanel","Media","Inputs","CustomSpan","InputItem","SuggetedItem","CenterItem","FileUploadContainer","CustomTextArea","textarea","InputLabel","CustomInput","input","ContentButton","Button","BackButtonContainer","BackButton","Wrapper","StyledForm","MintArtworks","t","useTranslation","account","useWeb3React","useToast","toastSuccess","toastError","useState","confirmed","setConfirmed","uploadArtworkImage","preview","raw","image","setImage","UFName","setUFName","UFType","setUFType","useTheme","artworkFile","setArtworkFile","suggested","percentages","useForm","register","errors","formState","handleSubmit","isMinting","setIsMinting","onSubmit","data","formData","FormData","append","artworkType","artworkName","artistName","portfolioUrl","aboutArtist","royalties","toString","axios","post","NFT_API_SERVER","then","res","status","message","artdata","tokenNo","res1","err","catch","error","name","to","src","alt","controls","type","width","height","required","minLength","value","maxLength","placeholder","style","fontWeight","fontSize","color","textAlign","mr","mt","pattern","min","max","justifyContent","display","disabled","htmlFor","margin","backgroundColor","borderRadius","cursor","className","padding","id","onChange","e","target","files","length","URL","createObjectURL","checked","scale","isLoading","endIcon","spin","marginTop","options","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pair","amount","BigNumber","times","DEFAULT_TOKEN_DECIMAL","deposit","tx","wait","receipt","unstakeFarm","withdraw","harvestFarm","getActivePools","block","eligiblePools","pools","filter","pool","sousId","isFinished","undefined","simpleRpcProvider","getBlockNumber","blockNumber","startBlockCalls","map","contractAddress","getAddress","endBlockCalls","multicall","sousChefV2","startBlocks","endBlocks","reduce","accum","poolCheck","index","startBlock","endBlock","gte","lte","ethers","utils","parseEther","overrides","nftContract","mint","burn","uri","approveMatchaToken","matchaTokenContract","nftExchangeAddr","approve","getApproveMatchaToken","owner","spender","allowance","approveNFT","originalNftContract","getApproveNFT","getApproved","buyToken","nftExchangeContract","readyToSellToken","price","cancelSellToken","setCurrentPrice","getAskLength","askLen","getAsks","getAsksDesc","getAsksByPage","page","size","getAsksByPageDesc","getAsksByUser","user","getAsksByUserDesc"],"mappings":"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","file":"static/js/26.cc936220.chunk.js","sourcesContent":["import { useCallback } from 'react'\nimport { mintNFT, burnNFT, getTokenURI } from 'utils/calls'\nimport { useNftContract } from 'hooks/useContract'\n\nconst useMintArt = (address: string) => {\n  const nftMintContract = useNftContract()\n\n  const handleMintArt = useCallback(\n    async (tokenID: string) => {\n      const txHash = await mintNFT(nftMintContract, tokenID)\n      console.info(txHash)\n    },\n    [nftMintContract],\n  )\n\n  const handleBurnArt = useCallback(\n    async (tokenID: string) => {\n      const txHash = await burnNFT(nftMintContract, address, tokenID)\n      console.info(txHash)\n    },\n    [nftMintContract, address],\n  )\n\n  const handleGetTokenURI = useCallback(\n    async (tokenID: string) => {\n      const tokenURI = await getTokenURI(nftMintContract, address, tokenID)\n      return tokenURI\n    },\n    [nftMintContract, address],\n  )\n\n  return { onMintArt: handleMintArt, onBurnArt: handleBurnArt, onGetTokenURI: handleGetTokenURI }\n}\n\nexport default useMintArt\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { useForm, SubmitHandler } from 'react-hook-form'\nimport { useWeb3React } from '@web3-react/core'\nimport { NFT_API_SERVER } from 'config/constants/index'\nimport { Checkbox, Text, Button, AutoRenewIcon, ArrowBackIcon } from 'parsec-swap-uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport useMintArt from './hooks/useMintArt'\n\nconst StyledPage = styled.div`\n  display: flex;\n  width: 100%;\n  min-height: calc(100vh - 64px);\n  // background-size: cover !important;\n  // background-image: ${({ theme }) => (theme.isDark ? `url('/images/black.png')` : `url('/images/light.png')`)};\n  // background-repeat: no-repeat;\n  // background-position: center top;\n  background: ${({ theme }) => (theme.isDark ? '#030923' : '#E5E5E5')};\n  padding: 0px 16px;\n`\n\nconst StyledCheckBox = styled(Checkbox)`\n  background-color: ${({ theme }) => (theme.isDark ? '#030923' : '#F0F2FA')};\n  border: ${({ theme }) => (theme.isDark ? '1px solid #b9b9b9' : '1px solid #E6E6E6')};\n  border-radius: 4px;\n  margin-right: 5px;\n  min-width: 24px;\n  min-height: 24px;\n  margin-top: 1px;\n  &:checked {\n    background-color: #19274b;\n  }\n  &:focus {\n    box-shadow: none;\n  }\n  &:hover {\n    box-shadow: none !important;\n  }\n`\n\nconst StyledModal = styled.div`\n  background-color: ${({ theme }) => (theme.isDark ? '#030923' : '#fff')};\n  border-radius: 20px;\n  border: none;\n  margin: 0 auto;\n  max-height: fit-content;\n  max-width: 1200px;\n  padding: 24px;\n  @media screen and (max-width: 400px) {\n    padding: 12px;\n  }\n`\n\nconst CustomModalTitle = styled.div`\n  font-size: 48px;\n  text-align: center;\n`\n\nconst CheckBoxTitle = styled.span`\n  color: ${({ theme }) => (theme.isDark ? '#B9B9B9' : '#757D93')};\n  line-height: 20px;\n  font-size: 15px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n`\n\nconst RightTitle = styled.span`\n  font-weight: 600;\n  font-size: 25px;\n  line-height: 30px;\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E3' : '#19274B')};\n`\n\nconst SpanCenterBox = styled.div`\n  margin-top: 12px;\n  text-align: center;\n`\nconst FormPanel = styled.div`\n  // display: flex;\n  // flex-direction: row;\n  // align-items: center;\n  // justify-content: center;\n  margin-top: 30px;\n\n  @media screen and (max-width: 1280px) {\n    // align-items: center;\n    // flex-direction: column;\n  }\n`\n\nconst Media = styled.div`\n  // width: 40%;\n  text-align: center;\n\n  & img {\n    width: 320px;\n    height: 320px;\n    border-radius: 20px;\n  }\n\n  @media screen and (max-width: 1280px) {\n    width: 100%;\n  }\n\n  @media screen and (max-width: 448px) {\n    & img {\n      width: 100%;\n      height: 100%;\n      border-radius: 20px;\n    }\n  }\n`\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-top: 30px;\n  @media screen and (max-width: 1280px) {\n    align-items: center;\n    flex-direction: column;\n  }\n`\n\nconst CustomSpan = styled.span`\n  color: ${({ theme }) => (theme.isDark ? '#b9b9b999' : '#19274b99')};\n  font-size: 13px;\n  line-height: 16px;\n`\n\nconst InputItem = styled.div`\n  margin: 12px 10px;\n`\n\nconst SuggetedItem = styled.div`\n  display: inline-flex;\n`\n\nconst CenterItem = styled.div`\n  display: inline-flex;\n  width: 100%;\n  justify-content: center;\n  margin: 32px 10px 15px 10px;\n`\n\nconst FileUploadContainer = styled.div`\n  width: 100%;\n  display: inline-flex;\n  flex-direction: column;\n  margin: 0px 10px;\n`\n\nconst CustomTextArea = styled.textarea`\n  width: 100%;\n  height: 165px;\n  border: none;\n  background-color: ${({ theme }) => (theme.isDark ? '#32323E' : 'rgba(0, 0, 0, 0.1)')};\n  margin-top: 8px;\n  border-radius: 10px;\n  padding: 10px;\n  color: ${({ theme }) => (theme.isDark ? '#d2d2cb' : '##2b353f')};\n  font-size: 18px;\n  box-shadow: inset 0px 2px 2px -1px rgb(74 74 104 / 10%);\n  :focus {\n    outline: #ad8fe8;\n    border: 1px solid #ad8fe8;\n    border-color: #ad8fe8;\n  }\n  ::placeholder {\n    color: ${({ theme }) => (theme.isDark ? '#8e8e9599' : '#19274b99')};\n    font-weight: 400;\n    font-size: 15px;\n  }\n`\n\nconst InputLabel = styled.span`\n  font-size: 15px;\n  min-width: 140px;\n  font-weight: 500;\n  color: ${({ theme }) => (theme.isDark ? 'rgba(185, 185, 185, 0.6)' : 'rgba(25, 39, 75, 0.6)')};\n  margin-bottom: 12px;\n  text-align: left;\n`\n\nconst CustomInput = styled.input`\n  width: 100%;\n  border-radius: 32px;\n  border: none;\n  background-color: ${({ theme }) => (theme.isDark ? '#32323E' : 'rgba(0, 0, 0, 0.1)')};\n  height: 50px;\n  font-size: 15px;\n  color: ${({ theme }) => (theme.isDark ? 'white' : '#19274B')};\n  box-shadow: inset 0px 2px 2px -1px rgb(74 74 104 / 10%);\n  outline: none;\n  margin: auto;\n  padding-left: 20px;\n  margin-top: 8px;\n\n  :focus {\n    outline: #ad8fe8;\n    border: 1px solid #ad8fe8;\n    border-color: #ad8fe8;\n  }\n  ::placeholder {\n    color: ${({ theme }) => (theme.isDark ? '#8e8e9599' : '#19274b99')};\n    font-weight: 400;\n    font-size: 15px;\n  }\n`\n\nconst ContentButton = styled(Button)`\n  height: 50px;\n  border-radius: 32px;\n  border: none;\n  background-color: #1fc7d4;\n  color: white;\n  padding: 12 0px;\n  font-size: 17px;\n  letter-spacing: -0.3px;\n  cursor: pointer;\n  width: 430px;\n  box-shadow: none;\n`\n\nconst BackButtonContainer = styled.div`\n  width: 100%;\n  margin: 0 auto;\n`\n\nconst BackButton = styled(Button)`\n  border: none;\n  background-color: transparent;\n  color: ${({ theme }) => (theme.isDark ? '#D6D7E3' : '#19274b99')};\n  font-size: 18px;\n  letter-spacing: -0.3px;\n  cursor: pointer;\n  box-shadow: none;\n`\n\nconst Wrapper = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding-top: 30px;\n  margin: 0 auto 24px auto;\n`\n\nconst StyledForm = styled.div`\n  width: 50%;\n`\n\ninterface IFormInput {\n  artworkType: string\n  artworkName: string\n  artistName: string\n  portfolioUrl: string\n  aboutArtist: string\n  royalties: number\n}\n\nexport default function MintArtworks() {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n\n  const [confirmed, setConfirmed] = useState(false)\n  const uploadArtworkImage = t('Upload your artwork image')\n  const [image, setImage] = useState({ preview: '', raw: '' })\n  const [UFName, setUFName] = useState('')\n  const [UFType, setUFType] = useState('')\n  const { theme } = useTheme()\n  const [artworkFile, setArtworkFile] = useState()\n  const { onMintArt } = useMintArt(account)\n\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      setImage({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n      })\n    }\n    setArtworkFile(e.target.files[0])\n    setUFName(e.target.files[0].name)\n    setUFType(e.target.files[0].type)\n  }\n\n  const suggested = t('Suggested: ')\n  const percentages = t('10%, 20%, 30%')\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm<IFormInput>()\n\n  const [isMinting, setIsMinting] = useState(false)\n\n  const onSubmit: SubmitHandler<IFormInput> = async (data) => {\n    if (!account) {\n      toastError('Error', 'Please CONNECT TO WALLET!')\n      return\n    }\n\n    const formData = new FormData()\n    formData.append('artworkType', data.artworkType)\n    formData.append('artworkName', data.artworkName)\n    formData.append('artistName', data.artistName)\n    formData.append('portfolioURL', data.portfolioUrl)\n    formData.append('description', data.aboutArtist)\n    formData.append('royalties', data.royalties.toString())\n    formData.append('artworkFile', artworkFile)\n    formData.append('address', account)\n\n    setIsMinting(true)\n    axios\n      .post(`${NFT_API_SERVER}/api/v0/nft/mint`, formData)\n      .then(async (res) => {\n        try {\n          if (!res.data.status) {\n            toastError('Error', res.data.message)\n          } else {\n            await onMintArt(res.data.artdata.tokenNo)\n\n            axios\n              .post(`${NFT_API_SERVER}/api/v0/nft/updateMintStatus`, { tokenNo: res.data.artdata.tokenNo })\n              .then((res1) => {\n                try {\n                  if (!res1.data.status) {\n                    toastError('Error', res1.data.message)\n                  }\n                } catch (err) {\n                  toastError('Mint Error', 'Mint Artwork Failed!')\n                }\n              })\n\n            toastSuccess('Mint Success', 'Mint Artwork Success!')\n          }\n        } catch (err) {\n          toastError('Mint Error', 'Mint Artwork Failed!')\n        }\n        setIsMinting(false)\n      })\n      .catch((error) => {\n        setIsMinting(false)\n        toastError(error.name, error.message)\n      })\n  }\n\n  return (\n    <StyledPage>\n      <Wrapper>\n        <StyledModal>\n          <BackButtonContainer>\n            <Link to=\"/marketplace\">\n              <BackButton>\n                <ArrowBackIcon />\n                Back\n              </BackButton>\n            </Link>\n          </BackButtonContainer>\n          <CustomModalTitle>\n            <RightTitle>Artwork Information</RightTitle>\n          </CustomModalTitle>\n          {/* <CustomModalTitleDetail>{titleDetail}</CustomModalTitleDetail> */}\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <FormPanel>\n              <Media>\n                {/* {theme.isDark ? (\n                    <img src={image.preview ? image.preview : '/images/marketplace/dark-logo.png'} alt=\"asdf\" />\n                  ) : (\n                    <img src={image.preview ? image.preview : '/images/marketplace/default.png'} alt=\"asdf\" />\n                  )} */}\n\n                {/* (UFType === 'image/jpeg' || UFType === 'image/png' || UFType === 'image/gif') */}\n                {image.preview ? (\n                  UFType === 'image/jpeg' || UFType === 'image/png' || UFType === 'image/gif' ? (\n                    <img src={image.preview} alt=\"uploadimage\" />\n                  ) : UFType === 'audio/mpeg' ? (\n                    <audio controls>\n                      <source src={image.preview} type=\"audio/ogg\" />\n                      <source src={image.preview} type=\"audio/mpeg\" />\n                      Your browser does not support the audio tag.\n                    </audio>\n                  ) : UFType === 'video/mp4' ? (\n                    <video width=\"320\" height=\"320\" controls>\n                      <source src={image.preview} type=\"video/mp4\" />\n                      <source src={image.preview} type=\"video/ogg\" />\n                      Your browser does not support the video tag.\n                    </video>\n                  ) : (\n                    <></>\n                  )\n                ) : theme.isDark ? (\n                  <img src=\"/images/marketplace/dark-logo.png\" alt=\"UploadPreviewImage\" />\n                ) : (\n                  <img src=\"/images/marketplace/default.png\" alt=\"UploadPreviewImage\" />\n                )}\n\n                <SpanCenterBox>\n                  <InputLabel>{uploadArtworkImage}</InputLabel>\n                </SpanCenterBox>\n              </Media>\n              <Inputs>\n                <StyledForm>\n                  <InputItem>\n                    <InputLabel>Artwork Type : </InputLabel>\n                    <CustomInput\n                      {...register('artworkType', {\n                        required: true,\n                        minLength: { value: 3, message: 'Artwork Type must be more than 3 letters' },\n                        maxLength: { value: 10, message: 'Artwork Type must be less than 10 letters' },\n                      })}\n                      placeholder=\"Type here...\"\n                    />\n                  </InputItem>\n                  <Text\n                    style={{ fontWeight: 400 }}\n                    fontSize=\"14px\"\n                    color=\"#ff3333\"\n                    textAlign=\"right\"\n                    mr=\"20px\"\n                    mt=\"4px\"\n                  >\n                    {errors.artworkType?.type === 'required' && 'Artwork type is required'}\n                    {errors?.artworkType?.message}\n                  </Text>\n                  <InputItem>\n                    <InputLabel>Artist Name : </InputLabel>\n                    <CustomInput\n                      {...register('artistName', {\n                        required: true,\n                        minLength: { value: 2, message: 'Artist Name must be more than 2 letters' },\n                        maxLength: { value: 20, message: 'Artist Name must be less than 20 letters' },\n                      })}\n                      placeholder=\"Enter the artist name\"\n                    />\n                  </InputItem>\n                  <Text\n                    style={{ fontWeight: 400 }}\n                    fontSize=\"14px\"\n                    color=\"#ff3333\"\n                    textAlign=\"right\"\n                    mr=\"20px\"\n                    mt=\"4px\"\n                  >\n                    {errors.artistName?.type === 'required' && 'Artist name is required'}\n                    {errors?.artistName?.message}\n                  </Text>\n                  <InputItem>\n                    <InputLabel>About the Artist : </InputLabel>\n                    <CustomTextArea\n                      {...register('aboutArtist', {\n                        required: true,\n                        minLength: { value: 20, message: 'This field must be more than 20 letters' },\n                        maxLength: { value: 200, message: 'This field must be less than 200 letters' },\n                      })}\n                      placeholder=\"Enter the brief introduction\"\n                    />\n                  </InputItem>\n                  <Text\n                    style={{ fontWeight: 400 }}\n                    fontSize=\"14px\"\n                    color=\"#ff3333\"\n                    textAlign=\"right\"\n                    mr=\"20px\"\n                    mt=\"4px\"\n                  >\n                    {errors.aboutArtist?.type === 'required' && 'This field is required'}\n                    {errors?.aboutArtist?.message}\n                  </Text>\n                </StyledForm>\n                <StyledForm>\n                  <InputItem>\n                    <InputLabel>Artwork Name : </InputLabel>\n                    <CustomInput\n                      {...register('artworkName', {\n                        required: true,\n                        minLength: { value: 3, message: 'Artwork Name must be more than 3 letters' },\n                        maxLength: { value: 20, message: 'Artwork Name must be less than 20 letters' },\n                      })}\n                      placeholder=\"Enter the art work name\"\n                    />\n                  </InputItem>\n                  <Text\n                    style={{ fontWeight: 400 }}\n                    fontSize=\"14px\"\n                    color=\"#ff3333\"\n                    textAlign=\"right\"\n                    mr=\"20px\"\n                    mt=\"4px\"\n                  >\n                    {errors.artworkName?.type === 'required' && 'Artwork Name is required'}\n                    {errors?.artworkName?.message}\n                  </Text>\n                  <InputItem>\n                    <InputLabel>Portfolio URL : </InputLabel>\n                    <CustomInput\n                      {...register('portfolioUrl', { required: true, pattern: /^(ftp|http|https):\\/\\/[^ \"]+$/ })}\n                      placeholder=\"Personal website, instogram, Twitter, etc.\"\n                    />\n                  </InputItem>\n                  <Text\n                    style={{ fontWeight: 400 }}\n                    fontSize=\"14px\"\n                    color=\"#ff3333\"\n                    textAlign=\"right\"\n                    mr=\"20px\"\n                    mt=\"4px\"\n                  >\n                    {errors.portfolioUrl && errors.portfolioUrl.type === 'required' && 'PortfolioUrl is required'}\n                    {errors.portfolioUrl &&\n                      errors.portfolioUrl.type === 'pattern' &&\n                      'URL is invalid. Ex: http://www.portfolio.com'}\n                  </Text>\n                  <InputItem>\n                    <InputLabel>Royalties (%): </InputLabel>\n                    <CustomInput\n                      type=\"number\"\n                      {...register('royalties', {\n                        required: true,\n                        min: { value: 0, message: 'This field is required between 0 ~ 100' },\n                        max: { value: 100, message: 'This field is required between 0 ~ 100' },\n                      })}\n                      placeholder=\"0\"\n                    />\n                  </InputItem>\n                  <Text\n                    style={{ fontWeight: 400 }}\n                    fontSize=\"14px\"\n                    color=\"#ff3333\"\n                    textAlign=\"right\"\n                    mr=\"20px\"\n                    mt=\"4px\"\n                  >\n                    {errors.royalties?.type === 'required' && 'This field is required'}\n                    {errors?.royalties?.message}\n                  </Text>\n                  <SuggetedItem style={{ width: '100%', justifyContent: 'flex-end' }}>\n                    <CustomSpan>{suggested}</CustomSpan>\n                    <CustomSpan>{percentages}</CustomSpan>\n                  </SuggetedItem>\n                  <FileUploadContainer>\n                    <InputLabel>File Upload: </InputLabel>\n                    <div style={{ display: 'flex' }}>\n                      <CustomInput value={image.preview ? UFName : 'Browse files...'} disabled />\n                      <label\n                        htmlFor=\"upload-button\"\n                        style={{\n                          margin: '8px 12px 0px 12px',\n                          backgroundColor: '#1FC7D4',\n                          borderRadius: '9px',\n                          cursor: 'pointer',\n                          height: '50px',\n                        }}\n                      >\n                        {image.preview ? (\n                          <>\n                            <span className=\"fa-stack fa-2x mt-3 mb-2\">\n                              <i className=\"fas fa-circle fa-stack-2x\" />\n                              <i className=\"fas fa-store fa-stack-1x fa-inverse\" />\n                            </span>\n                            <h5\n                              className=\"text-center\"\n                              style={{\n                                padding: '17px 26px',\n                                fontSize: '17px',\n                                color: 'white',\n                                cursor: 'pointer',\n                              }}\n                            >\n                              Upload\n                            </h5>\n                          </>\n                        ) : (\n                          <>\n                            <span className=\"fa-stack fa-2x mt-3 mb-2\">\n                              <i className=\"fas fa-circle fa-stack-2x\" />\n                              <i className=\"fas fa-store fa-stack-1x fa-inverse\" />\n                            </span>\n                            <h5\n                              className=\"text-center\"\n                              style={{\n                                padding: '17px 26px',\n                                fontSize: '17px',\n                                color: 'white',\n                                cursor: 'pointer',\n                              }}\n                            >\n                              Upload\n                            </h5>\n                          </>\n                        )}\n                      </label>\n                      <input type=\"file\" id=\"upload-button\" style={{ display: 'none' }} onChange={handleChange} />\n                    </div>\n                  </FileUploadContainer>\n                </StyledForm>\n              </Inputs>\n            </FormPanel>\n\n            <CenterItem>\n              <StyledCheckBox checked={confirmed} onChange={() => setConfirmed(!confirmed)} scale=\"sm\" />\n              <CheckBoxTitle>\n                I declare that this is an original artwork. I understand that no plagiarism is allowed, and that the\n                artwork can be removed anytime if detected.\n              </CheckBoxTitle>\n            </CenterItem>\n            <CenterItem>\n              {confirmed ? (\n                <ContentButton\n                  type=\"submit\"\n                  isLoading={isMinting}\n                  endIcon={isMinting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                  backgroundColor=\"#1FC7D4\"\n                  style={{ marginTop: '20px' }}\n                >\n                  Mint Artwork\n                </ContentButton>\n              ) : (\n                <ContentButton\n                  type=\"submit\"\n                  backgroundColor=\"#BDC2C4\"\n                  scale=\"sm\"\n                  style={{ marginTop: '20px' }}\n                  disabled\n                >\n                  Mint Artwork\n                </ContentButton>\n              )}\n            </CenterItem>\n          </form>\n        </StyledModal>\n      </Wrapper>\n    </StyledPage>\n  )\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pair, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const tx = await masterChefContract.deposit(pair, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pair, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  const tx = await masterChefContract.withdraw(pair, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pair) => {\n  const tx = await masterChefContract.deposit(pair, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import { DEFAULT_GAS_LIMIT } from 'config'\nimport { ethers } from 'ethers'\n\nconst options = {\n  gasLimit: ethers.utils.parseEther('0.0000000000003'),\n}\n\nconst overrides = {\n  value: ethers.utils.parseEther('0.1'),\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const mintNFT = async (nftContract, tokenID) => {\n  const tx = await nftContract.mint(tokenID, overrides)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const burnNFT = async (nftContract, address, tokenID) => {\n  const tx = await nftContract.burn(address, tokenID, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const getTokenURI = async (nftContract, address, tokenID) => {\n  const uri = await nftContract.tokenURI(tokenID)\n  return uri\n}\n\n// Exchange\nexport const approveMatchaToken = async (matchaTokenContract, nftExchangeAddr, amount) => {\n  const tx = await matchaTokenContract.approve(nftExchangeAddr, amount, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const getApproveMatchaToken = async (matchaTokenContract, owner, spender) => {\n  const value = await matchaTokenContract.allowance(owner, spender)\n  return value\n}\n\nexport const approveNFT = async (originalNftContract, nftExchangeAddr, tokenID) => {\n  const tx = await originalNftContract.approve(nftExchangeAddr, tokenID, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const getApproveNFT = async (originalNftContract, tokenID) => {\n  const address = await originalNftContract.getApproved(tokenID)\n  return address\n}\n\nexport const buyToken = async (nftExchangeContract, tokenID) => {\n  const tx = await nftExchangeContract.buyToken(tokenID, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const readyToSellToken = async (nftExchangeContract, tokenID, price) => {\n  const tx = await nftExchangeContract.readyToSellToken(tokenID, price, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const cancelSellToken = async (nftExchangeContract, tokenID) => {\n  const tx = await nftExchangeContract.cancelSellToken(tokenID, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const setCurrentPrice = async (nftExchangeContract, tokenID, price) => {\n  const tx = await nftExchangeContract.setCurrentPrice(tokenID, price, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const getAskLength = async (nftExchangeContract) => {\n  const askLen = await nftExchangeContract.getAskLength()\n  return askLen\n}\n\nexport const getAsks = async (nftExchangeContract) => {\n  const askLen = await nftExchangeContract.getAsks()\n  return askLen\n}\n\nexport const getAsksDesc = async (nftExchangeContract) => {\n  const askLen = await nftExchangeContract.getAsksDesc()\n  return askLen\n}\n\nexport const getAsksByPage = async (nftExchangeContract, page, size) => {\n  const askLen = await nftExchangeContract.getAsksByPage(page, size)\n  return askLen\n}\n\nexport const getAsksByPageDesc = async (nftExchangeContract, page, size) => {\n  const askLen = await nftExchangeContract.getAsksByPageDesc(page, size)\n  return askLen\n}\n\nexport const getAsksByUser = async (nftExchangeContract, user) => {\n  const askLen = await nftExchangeContract.getAsksByUser(user)\n  return askLen\n}\n\nexport const getAsksByUserDesc = async (nftExchangeContract, user) => {\n  const askLen = await nftExchangeContract.getAsksByUserDesc(user)\n  return askLen\n}\n"],"sourceRoot":""}