{"version":3,"sources":["views/Voting/components/CastVoteModal/types.ts","views/Voting/Proposal/Details.tsx","views/Voting/components/TextEllipsis.tsx","views/Voting/Proposal/Results.tsx","views/Voting/components/CastVoteModal/MainView.tsx","views/Voting/components/CastVoteModal/index.tsx","views/Voting/Proposal/Vote.tsx","views/Voting/components/Proposal/VotesLoading.tsx","views/Voting/components/Proposal/Row.tsx","views/Voting/components/Proposal/VoteRow.tsx","views/Voting/Proposal/Votes.tsx","views/Voting/Proposal/index.tsx","components/Tags.tsx","state/voting/hooks.ts","views/Voting/components/Proposals/tags.tsx","../node_modules/lodash/orderBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js"],"names":["ConfirmVoteView","DetailBox","styled","Box","theme","colors","background","cardBorder","Details","proposal","t","useTranslation","startDate","Date","start","endDate","end","mb","as","scale","alignItems","color","href","IPFS_GATEWAY","id","ml","slice","getZnxScanLink","author","truncateWalletAddress","snapshot","p","proposalState","state","fontSize","format","TextEllipsis","Text","Results","choices","votes","results","calculateVoteResults","votingStatus","useGetVotingStateLoadingStatus","account","useWeb3React","totalVotes","getTotalFromVotes","VotingStateLoadingStatus","IDLE","map","choice","index","choiceVotes","totalChoiceVote","progress","eq","div","times","toNumber","hasVoted","some","vote","voter","toLowerCase","mt","title","variant","outline","mr","primaryStep","justifyContent","total","toFormat","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","LOADING","length","count","height","MainView","isPending","isLoading","onConfirm","onViewDetails","onDismiss","textTransform","bold","label","onClick","style","cursor","width","endIcon","spin","disabled","CastVoteModal","onSuccess","proposalId","block","useState","MAIN","view","setView","modalIsOpen","setModalIsOpen","setIsPending","library","useWeb3Provider","useTheme","useGetVotingPower","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","verificationHash","isStartView","handleBack","DETAILS","handleDismiss","handleConfirmVote","voteMsg","JSON","stringify","generatePayloadData","type","SnapshotCommand","VOTE","payload","value","metadata","votingPower","toString","signMessage","sig","msg","address","sendSnaphotData","console","error","onBack","hideCloseButton","headerBackground","gradients","cardHeader","DetailsView","Choice","isChecked","isDisabled","ChoiceText","Vote","props","setVote","toastSuccess","useToast","dispatch","useAppDispatch","handleSuccess","fetchVotes","Number","useModal","presentCastVoteModal","flexShrink","checked","onChange","ConnectWalletButton","Row","Flex","StyledSkeleton","Skeleton","VotesLoading","AddressColumn","attrs","ChoiceColumn","VotingPowerColumn","Grid","mediaQueries","sm","VoteRow","isVoter","hasVotingPower","BigNumber","parseVotePower","incomingVote","parseFloat","Votes","showAll","setShowAll","orderedVotes","orderBy","displayVotes","isFinished","py","px","Proposal","useParams","useGetProposal","useGetVotes","voteLoadingStatus","proposalLoadingStatus","useGetProposalLoadingStatus","hasAccountVoted","isPageLoading","useEffect","fetchProposal","getVotes","verifyVotes","Container","Link","to","startIcon","Layout","isCoreProposal","ReactMarkdown","body","ProposalState","ACTIVE","PageLoader","CoreTag","CommunityTag","DualTag","VoteNowTag","SoonTag","ClosedTag","useGetProposals","proposals","useSelector","voting","Object","values","filter","_inValid","ProposalStateTag","PENDING","ProposalTypeTag","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","iteratee","result","key","object","other","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol"],"mappings":"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","file":"static/js/15.3b8f497c.chunk.js","sourcesContent":["import { InjectedModalProps } from 'parsec-swap-uikit'\n\nexport enum ConfirmVoteView {\n  MAIN = 'main',\n  DETAILS = 'details',\n}\n\nexport interface CastVoteModalProps extends InjectedModalProps {\n  onSuccess: () => Promise<void>\n  proposalId: string\n  vote: {\n    label: string\n    value: number\n  }\n  block?: number\n}\n","import React from 'react'\nimport { Box, Card, CardBody, CardHeader, Flex, Heading, LinkExternal, Text } from 'parsec-swap-uikit'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\nimport { Proposal } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getZnxScanLink } from 'utils'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport { IPFS_GATEWAY } from '../config'\nimport { ProposalStateTag } from '../components/Proposals/tags'\n\ninterface DetailsProps {\n  proposal: Proposal\n}\n\nconst DetailBox = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ proposal }) => {\n  const { t } = useTranslation()\n  const startDate = new Date(proposal.start * 1000)\n  const endDate = new Date(proposal.end * 1000)\n\n  return (\n    <Card mb=\"16px\">\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Details')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Identifier')}</Text>\n          <LinkExternal href={`${IPFS_GATEWAY}/${proposal.id}`} ml=\"8px\">\n            {proposal.id.slice(0, 8)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Creator')}</Text>\n          <LinkExternal href={getZnxScanLink(proposal.author, 'address')} ml=\"8px\">\n            {truncateWalletAddress(proposal.author)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Snapshot')}</Text>\n          <LinkExternal href={getZnxScanLink(proposal.snapshot, 'block')} ml=\"8px\">\n            {proposal.snapshot}\n          </LinkExternal>\n        </Flex>\n        <DetailBox p=\"16px\">\n          <ProposalStateTag proposalState={proposal.state} mb=\"8px\" />\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('Start Date')}\n            </Text>\n            <Text ml=\"8px\">{format(startDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('End Date')}\n            </Text>\n            <Text ml=\"8px\">{format(endDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n        </DetailBox>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Details\n","import styled from 'styled-components'\nimport { Text } from 'parsec-swap-uikit'\n\nconst TextEllipsis = styled(Text)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport default TextEllipsis\n","import React from 'react'\nimport {\n  Box,\n  Text,\n  Flex,\n  Card,\n  CardBody,\n  CardHeader,\n  Heading,\n  Progress,\n  Skeleton,\n  Tag,\n  CheckmarkCircleIcon,\n} from 'parsec-swap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers'\nimport TextEllipsis from '../components/TextEllipsis'\n\ninterface ResultsProps {\n  choices: string[]\n  votes: Vote[]\n}\n\nconst Results: React.FC<ResultsProps> = ({ choices, votes }) => {\n  const { t } = useTranslation()\n  const results = calculateVoteResults(votes)\n  const votingStatus = useGetVotingStateLoadingStatus()\n  const { account } = useWeb3React()\n  const totalVotes = getTotalFromVotes(votes)\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Current Results')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {votingStatus === VotingStateLoadingStatus.IDLE &&\n          choices.map((choice, index) => {\n            const choiceVotes = results[choice] || []\n            const totalChoiceVote = getTotalFromVotes(choiceVotes)\n\n            const progress = totalVotes.eq(0) ? 0 : totalChoiceVote.div(totalVotes).times(100).toNumber()\n            const hasVoted = choiceVotes.some((vote) => {\n              return account && vote.voter.toLowerCase() === account.toLowerCase()\n            })\n\n            return (\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\n                <Flex alignItems=\"center\" mb=\"8px\">\n                  <TextEllipsis mb=\"4px\" title={choice}>\n                    {choice}\n                  </TextEllipsis>\n                  {hasVoted && (\n                    <Tag variant=\"success\" outline ml=\"8px\">\n                      <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n                    </Tag>\n                  )}\n                </Flex>\n                <Box mb=\"4px\">\n                  <Progress primaryStep={progress} scale=\"sm\" />\n                </Box>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text color=\"textSubtle\">{t('%total% Votes', { total: totalChoiceVote.toFormat(3) })}</Text>\n                  <Text>\n                    {progress.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%\n                  </Text>\n                </Flex>\n              </Box>\n            )\n          })}\n\n        {votingStatus === VotingStateLoadingStatus.LOADING &&\n          times(choices.length).map((count, index) => {\n            return (\n              <Box key={count} mt={index > 0 ? '24px' : '0px'}>\n                <Skeleton height=\"36px\" mb=\"4px\" />\n              </Box>\n            )\n          })}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Results\n","import React from 'react'\nimport { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon } from 'parsec-swap-uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport TextEllipsis from '../TextEllipsis'\nimport { VotingBox, ModalInner } from './styles'\nimport { CastVoteModalProps } from './types'\n\ninterface MainViewProps {\n  vote: {\n    label: string\n    value: number\n  }\n  isLoading: boolean\n  isPending: boolean\n  total: BigNumber\n  onConfirm: () => void\n  onViewDetails: () => void\n  onDismiss: CastVoteModalProps['onDismiss']\n}\n\nconst MainView: React.FC<MainViewProps> = ({\n  vote,\n  total,\n  isPending,\n  isLoading,\n  onConfirm,\n  onViewDetails,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <ModalInner>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Voting For')}\n        </Text>\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\n          {vote.label}\n        </TextEllipsis>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Your Voting Power')}\n        </Text>\n        {isLoading ? (\n          <Skeleton height=\"64px\" mb=\"24px\" />\n        ) : (\n          <VotingBox onClick={onViewDetails} style={{ cursor: 'pointer' }}>\n            <Text bold fontSize=\"20px\">\n              {total.toFormat(3)}\n            </Text>\n            <IconButton scale=\"sm\" variant=\"text\">\n              <ChevronRightIcon width=\"24px\" />\n            </IconButton>\n          </VotingBox>\n        )}\n        <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\n          {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\n        </Text>\n      </ModalInner>\n      <Button\n        isLoading={isPending}\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={isLoading || total.eq(0)}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={onConfirm}\n      >\n        {t('Confirm Vote')}\n      </Button>\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\n        {t('Cancel')}\n      </Button>\n    </>\n  )\n}\n\nexport default MainView\n","import React, { useState } from 'react'\nimport { Box, Modal } from 'parsec-swap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { SnapshotCommand } from 'state/types'\nimport { signMessage } from 'utils/web3React'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useTheme from 'hooks/useTheme'\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\nimport MainView from './MainView'\nimport DetailsView from './DetailsView'\nimport { generatePayloadData, Message, sendSnaphotData } from '../../helpers'\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\n\nconst CastVoteModal: React.FC<CastVoteModalProps> = ({ onSuccess, proposalId, vote, block, onDismiss }) => {\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const [isPending, setIsPending] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { library } = useWeb3Provider()\n  const { theme } = useTheme()\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    verificationHash,\n  } = useGetVotingPower(block, modalIsOpen)\n\n  const isStartView = view === ConfirmVoteView.MAIN\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\n\n  const title = {\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\n  }\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  const handleConfirmVote = async () => {\n    try {\n      setIsPending(true)\n      const voteMsg = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.VOTE,\n        payload: {\n          proposal: proposalId,\n          choice: vote.value,\n          metadata: {\n            votingPower: total.toString(),\n            verificationHash,\n          },\n        },\n      })\n\n      const sig = await signMessage(library, account, voteMsg)\n      const msg: Message = { address: account, msg: voteMsg, sig }\n\n      // Save proposal to snapshot\n      await sendSnaphotData(msg)\n      setIsPending(false)\n\n      await onSuccess()\n\n      handleDismiss()\n    } catch (error) {\n      setIsPending(false)\n      // toastError(t('Error'), error?.message)\n      console.error(error)\n    }\n  }\n\n  return (\n    <Modal\n      title={title[view]}\n      onBack={handleBack}\n      onDismiss={onDismiss}\n      hideCloseButton={!isStartView}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Box mb=\"24px\" width=\"320px\">\n        {view === ConfirmVoteView.MAIN && (\n          <MainView\n            vote={vote}\n            isLoading={isLoading}\n            isPending={isPending}\n            total={total}\n            onConfirm={handleConfirmVote}\n            onViewDetails={handleViewDetails}\n            onDismiss={handleDismiss}\n          />\n        )}\n        {view === ConfirmVoteView.DETAILS && (\n          <DetailsView\n            total={total}\n            cakeBalance={cakeBalance}\n            cakeVaultBalance={cakeVaultBalance}\n            cakePoolBalance={cakePoolBalance}\n            poolsBalance={poolsBalance}\n            cakeBnbLpBalance={cakeBnbLpBalance}\n          />\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default CastVoteModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, CardHeader, CardProps, Heading, Radio, Text, useModal } from 'parsec-swap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { Proposal } from 'state/types'\nimport { fetchVotes } from 'state/voting'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport CastVoteModal from '../components/CastVoteModal'\n\ninterface VoteProps extends CardProps {\n  proposal: Proposal\n}\n\ninterface State {\n  label: string\n  value: number\n}\n\nconst Choice = styled.label<{ isChecked: boolean; isDisabled: boolean }>`\n  align-items: center;\n  border: 1px solid ${({ theme, isChecked }) => theme.colors[isChecked ? 'success' : 'cardBorder']};\n  border-radius: 16px;\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  margin-bottom: 16px;\n  padding: 16px;\n`\n\nconst ChoiceText = styled.div`\n  flex: 1;\n  padding-left: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 0;\n`\n\nconst Vote: React.FC<VoteProps> = ({ proposal, ...props }) => {\n  const [vote, setVote] = useState<State>(null)\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleSuccess = async () => {\n    toastSuccess(t('Vote cast!'))\n    dispatch(fetchVotes({ proposalId: proposal.id, block: Number(proposal.snapshot) }))\n  }\n\n  const [presentCastVoteModal] = useModal(\n    <CastVoteModal onSuccess={handleSuccess} proposalId={proposal.id} vote={vote} block={Number(proposal.snapshot)} />,\n  )\n\n  return (\n    <Card {...props}>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Cast your vote')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {proposal.choices.map((choice, index) => {\n          const isChecked = index + 1 === vote?.value\n\n          const handleChange = () => {\n            setVote({\n              label: choice,\n              value: index + 1,\n            })\n          }\n\n          return (\n            <Choice key={choice} isChecked={isChecked} isDisabled={!account}>\n              <div style={{ flexShrink: 0 }}>\n                <Radio scale=\"sm\" value={choice} checked={isChecked} onChange={handleChange} disabled={!account} />\n              </div>\n              <ChoiceText>\n                <Text as=\"span\" title={choice}>\n                  {choice}\n                </Text>\n              </ChoiceText>\n            </Choice>\n          )\n        })}\n        {account ? (\n          <Button onClick={presentCastVoteModal} disabled={vote === null}>\n            {t('Cast Vote')}\n          </Button>\n        ) : (\n          <ConnectWalletButton />\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Vote\n","import React from 'react'\nimport { Box, Flex, Skeleton } from 'parsec-swap-uikit'\nimport times from 'lodash/times'\nimport styled from 'styled-components'\n\nconst Row = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst StyledSkeleton = styled(Skeleton)`\n  flex: 1;\n`\n\nconst VotesLoading = () => {\n  return (\n    <Box>\n      {times(10).map((index) => (\n        <Row key={index}>\n          <Skeleton height=\"21px\" mr=\"32px\" width=\"100px\" />\n          <StyledSkeleton height=\"21px\" mr=\"32px\" width=\"100%\" />\n          <StyledSkeleton height=\"21px\" width=\"100%\" />\n        </Row>\n      ))}\n    </Box>\n  )\n}\n\nexport default VotesLoading\n","import styled from 'styled-components'\nimport { Grid, Box } from 'parsec-swap-uikit'\n\nexport const AddressColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: address;\n`\n\nexport const ChoiceColumn = styled(Box)`\n  grid-area: choice;\n  overflow: hidden;\n`\n\nexport const VotingPowerColumn = styled(Box)`\n  justify-self: end;\n  grid-area: vote;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  grid-gap: 8px;\n  grid-template-areas: 'address choice vote';\n  grid-template-columns: minmax(110px, 200px) 1fr 1fr;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n    padding: 16px 24px;\n  }\n`\n\nexport default Row\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from 'parsec-swap-uikit'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport { getZnxScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote } from 'state/types'\nimport { IPFS_GATEWAY } from '../../config'\nimport TextEllipsis from '../TextEllipsis'\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row'\n\ninterface VoteRowProps {\n  vote: Vote\n  isVoter: boolean\n}\n\nconst VoteRow: React.FC<VoteRowProps> = ({ vote, isVoter }) => {\n  const { t } = useTranslation()\n  const hasVotingPower = !!vote.metadata?.votingPower\n  const votingPower = hasVotingPower ? new BigNumber(vote.metadata.votingPower).toFormat(3) : '--'\n\n  return (\n    <Row>\n      <AddressColumn>\n        <Flex alignItems=\"center\">\n          <LinkExternal href={getZnxScanLink(vote.voter, 'address')}>{truncateWalletAddress(vote.voter)}</LinkExternal>\n          {isVoter && (\n            <Tag variant=\"success\" outline ml=\"8px\">\n              <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n            </Tag>\n          )}\n        </Flex>\n      </AddressColumn>\n      <ChoiceColumn>\n        <TextEllipsis title={vote.proposal.choices[vote.choice - 1]}>\n          {vote.proposal.choices[vote.choice - 1]}\n        </TextEllipsis>\n      </ChoiceColumn>\n      <VotingPowerColumn>\n        <Flex alignItems=\"center\" justifyContent=\"end\">\n          <Text title={vote.metadata.votingPower}>{votingPower}</Text>\n          {hasVotingPower && <LinkExternal href={`${IPFS_GATEWAY}/${vote.id}`} />}\n        </Flex>\n      </VotingPowerColumn>\n    </Row>\n  )\n}\n\nexport default VoteRow\n","import React, { useState } from 'react'\nimport {\n  AutoRenewIcon,\n  Card,\n  CardHeader,\n  ChevronDownIcon,\n  Flex,\n  Heading,\n  Button,\n  ChevronUpIcon,\n  Text,\n} from 'parsec-swap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport orderBy from 'lodash/orderBy'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\nimport VotesLoading from '../components/Proposal/VotesLoading'\nimport VoteRow from '../components/Proposal/VoteRow'\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from '../components/Proposal/Row'\n\nconst VOTES_PER_VIEW = 20\n\ninterface VotesProps {\n  votes: Vote[]\n}\n\nconst parseVotePower = (incomingVote: Vote) => {\n  return parseFloat(incomingVote?.metadata?.votingPower)\n}\n\nconst Votes: React.FC<VotesProps> = ({ votes }) => {\n  const [showAll, setShowAll] = useState(false)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\n  const voteStatus = useGetVotingStateLoadingStatus()\n  const isFinished = voteStatus === VotingStateLoadingStatus.IDLE\n\n  const handleClick = () => {\n    setShowAll(!showAll)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\" scale=\"md\">\n            {t('Votes (%count%)', { count: votes.length.toLocaleString() })}\n          </Heading>\n          {!isFinished && <AutoRenewIcon spin width=\"22px\" />}\n        </Flex>\n      </CardHeader>\n      {!isFinished && <VotesLoading />}\n\n      {isFinished && displayVotes.length > 0 && (\n        <>\n          <Row>\n            <AddressColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Voter')}\n              </Text>\n            </AddressColumn>\n            <ChoiceColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Decision')}\n              </Text>\n            </ChoiceColumn>\n            <VotingPowerColumn>\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"uppercase\" bold>\n                {t('Vote Weight')}\n              </Text>\n            </VotingPowerColumn>\n          </Row>\n          {displayVotes.map((vote) => {\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\n          })}\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\n            <Button\n              width=\"100%\"\n              onClick={handleClick}\n              variant=\"text\"\n              endIcon={\n                showAll ? (\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\n                ) : (\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\n                )\n              }\n              disabled={!isFinished}\n            >\n              {showAll ? t('Hide') : t('See All')}\n            </Button>\n          </Flex>\n        </>\n      )}\n\n      {isFinished && displayVotes.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\n        </Flex>\n      )}\n    </Card>\n  )\n}\n\nexport default Votes\n","import React, { useEffect } from 'react'\nimport { ArrowBackIcon, Box, Button, Flex, Heading } from 'parsec-swap-uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link, useParams } from 'react-router-dom'\nimport { useAppDispatch } from 'state'\nimport { ProposalState, VotingStateLoadingStatus } from 'state/types'\nimport {\n  useGetProposal,\n  useGetVotingStateLoadingStatus,\n  useGetVotes,\n  useGetProposalLoadingStatus,\n} from 'state/voting/hooks'\nimport { fetchProposal, fetchVotes, verifyVotes } from 'state/voting'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { isCoreProposal } from '../helpers'\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\nimport Layout from '../components/Layout'\nimport Details from './Details'\nimport Results from './Results'\nimport Vote from './Vote'\nimport Votes from './Votes'\n\nconst Proposal = () => {\n  const { id }: { id: string } = useParams()\n  const proposal = useGetProposal(id)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const votes = useGetVotes(id)\n  const voteLoadingStatus = useGetVotingStateLoadingStatus()\n  const proposalLoadingStatus = useGetProposalLoadingStatus()\n  const hasAccountVoted = account && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\n  const { id: proposalId = null, snapshot = null } = proposal ?? {}\n  const isPageLoading =\n    voteLoadingStatus === VotingStateLoadingStatus.LOADING || proposalLoadingStatus === VotingStateLoadingStatus.LOADING\n\n  useEffect(() => {\n    dispatch(fetchProposal(id))\n  }, [id, dispatch])\n\n  // We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\n  useEffect(() => {\n    const getVotes = async () => {\n      await dispatch(fetchVotes({ proposalId, block: Number(snapshot) }))\n      dispatch(verifyVotes({ proposalId, snapshot }))\n    }\n\n    if (proposalId && snapshot) {\n      getVotes()\n    }\n  }, [proposalId, snapshot, dispatch])\n\n  if (!proposal) {\n    return <PageLoader />\n  }\n\n  return (\n    <Container py=\"40px\">\n      <Box mb=\"40px\">\n        <Button as={Link} to=\"/voting\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\n          {t('Back to Vote Overview')}\n        </Button>\n      </Box>\n      <Layout>\n        <Box>\n          <Box mb=\"32px\">\n            <Flex alignItems=\"center\" mb=\"8px\">\n              <ProposalStateTag proposalState={proposal.state} />\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\n            </Flex>\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\n              {proposal.title}\n            </Heading>\n            <Box>\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\n            </Box>\n          </Box>\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\n            <Vote proposal={proposal} mb=\"16px\" />\n          )}\n          <Votes votes={votes} />\n        </Box>\n        <Box>\n          <Details proposal={proposal} />\n          <Results choices={proposal.choices} votes={votes} />\n        </Box>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default Proposal\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from 'parsec-swap-uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { useSelector } from 'react-redux'\nimport { State } from '../types'\n\n// Voting\nexport const useGetProposals = () => {\n  const proposals = useSelector((state: State) => state.voting.proposals)\n  return Object.values(proposals)\n}\n\nexport const useGetProposal = (proposalId: string) => {\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\n  return proposal\n}\n\nexport const useGetVotes = (proposalId: string) => {\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\n}\n\nexport const useGetVotingStateLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\n  return votingStatus\n}\n\nexport const useGetProposalLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\n  return votingStatus\n}\n","import React from 'react'\nimport { TagProps } from 'parsec-swap-uikit'\nimport { ClosedTag, CommunityTag, CoreTag, SoonTag, VoteNowTag } from 'components/Tags'\nimport { ProposalState } from 'state/types'\n\ninterface ProposalStateTagProps extends TagProps {\n  proposalState: ProposalState\n}\n\nexport const ProposalStateTag: React.FC<ProposalStateTagProps> = ({ proposalState, ...props }) => {\n  if (proposalState === ProposalState.ACTIVE) {\n    return <VoteNowTag {...props} />\n  }\n\n  if (proposalState === ProposalState.PENDING) {\n    return <SoonTag {...props} />\n  }\n\n  return <ClosedTag {...props} />\n}\n\ninterface ProposalTypeTagProps extends TagProps {\n  isCoreProposal: boolean\n}\n\nexport const ProposalTypeTag: React.FC<ProposalTypeTagProps> = ({ isCoreProposal, ...props }) => {\n  if (isCoreProposal) {\n    return <CoreTag {...props} />\n  }\n\n  return <CommunityTag {...props} />\n}\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n"],"sourceRoot":""}